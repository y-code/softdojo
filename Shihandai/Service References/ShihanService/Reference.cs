//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SoftDojo.Shihandai.ShihanService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ShihanService.IShihanServiceToShihandai", CallbackContract=typeof(SoftDojo.Shihandai.ShihanService.IShihanServiceToShihandaiCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IShihanServiceToShihandai {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShihanServiceToShihandai/Enroll", ReplyAction="http://tempuri.org/IShihanServiceToShihandai/EnrollResponse")]
        string Enroll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShihanServiceToShihandai/Detach", ReplyAction="http://tempuri.org/IShihanServiceToShihandai/DetachResponse")]
        string Detach();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShihanServiceToShihandai/FinalizeWork", ReplyAction="http://tempuri.org/IShihanServiceToShihandai/FinalizeWorkResponse")]
        string FinalizeWork();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShihanServiceToShihandaiCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShihanServiceToShihandai/StartWork", ReplyAction="http://tempuri.org/IShihanServiceToShihandai/StartWorkResponse")]
        string StartWork(string work);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IShihanServiceToShihandaiChannel : SoftDojo.Shihandai.ShihanService.IShihanServiceToShihandai, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ShihanServiceToShihandaiClient : System.ServiceModel.DuplexClientBase<SoftDojo.Shihandai.ShihanService.IShihanServiceToShihandai>, SoftDojo.Shihandai.ShihanService.IShihanServiceToShihandai {
        
        public ShihanServiceToShihandaiClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ShihanServiceToShihandaiClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ShihanServiceToShihandaiClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ShihanServiceToShihandaiClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ShihanServiceToShihandaiClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string Enroll() {
            return base.Channel.Enroll();
        }
        
        public string Detach() {
            return base.Channel.Detach();
        }
        
        public string FinalizeWork() {
            return base.Channel.FinalizeWork();
        }
    }
}
